/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'baniuk' at '02/11/15 09:55' with Gradle 2.6
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.6/userguide/tutorial_java_projects.html
 */

// imports
import org.apache.tools.ant.filters.ReplaceTokens

// Apply the java plugin to add support for Java
allprojects {
	apply plugin: 'java'
	// In this section you declare where to find the dependencies of your project
	repositories {
	    // Use 'jcenter' for resolving your dependencies.
	    // You can declare any Maven/Ivy/file repository here.
	    jcenter()
	    mavenCentral()
	}
	// In this section you declare the dependencies for your production and test code
	dependencies {
	    // The production code uses the SLF4J logging API at compile time
	    compile 'org.slf4j:slf4j-api:1.7.12'
	    compile 'net.imagej:ij:1.50d'
	    compile 'javax.vecmath:vecmath:1.5.2'

	    // Declare the dependency for your favourite test framework you want to use in your tests.
	    // TestNG is also supported by the Gradle Test task. Just change the
	    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
	    // 'test.useTestNG()' to your build script.
	    testCompile 'junit:junit:4.12'
	}
    task listProject { task -> println "Found project: $task.project.name" }
}


// set current plugin version
def version = "0.11c"
// set purpose of building 
def purpose = "_testbuild"


// generate plugins.config script for QuimP
// config stage (no <<), can not be in execution (<<) because it could be run only on plugins.config change
// This task will run always, no dependency is required
task generatePluginConfig(type: Copy) {
	description 'Cretes plugins.config file with current version. This file is required by IJ to configure plugin'
	println '[INFO] Creating QuimP plugins.config file'
	from 'QuimP_plugin/Resources/main/java/uk/warwick/quimp/plugins.config'
	into 'QuimP_plugin/src/main/java/uk/warwick/quimp'
	filter(ReplaceTokens, tokens: [ver: version, purpose: purpose])
}

// set name of jar files for all projects
subprojects {
	tasks.withType(Jar) {
		baseName = "$project.name" + "_" + version + purpose
	}
}