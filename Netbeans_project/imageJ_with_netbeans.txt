Netbeans setup

New Project

Java Application

Finish

Get a copy of the ij.jar (compiled ImageJ classes).
Download imageJ, run
the imageJ updater to get the latest ij.jar
(for mac its stored inside the imageJ.app application package)

If you don't have one, create a folder to act as your library of
.jar files. place ij.jar inside.

In netbeans, right click your project and select Properties

Under Categories click libraries

CLick 'Add JAR/Folder'. Choose your ij.jar in your library

Now we need to set up a package for your plugin.

Expand your project and right click 'Source Packages'.
Click 'New->Java Package'. Give a name , e.g. myPlugin. Click OK.


Create a test class. Right click myPlugin and select New java class
Type 'testClass' in class name and click finish.

import ij.IJ, add a hello world main method:-

package myPlugin;

import ij.IJ;

public class testClass {   
   public static void main(String[] args){
      IJ.log("HelloWorld");
   }
}

Build the project (Run->build main project').
It should successfully build and write 'myPlugin.jar' to
'myPlugin/dist/.

Run the project (Run->Run Main Project).
In the pop up select myPlugin as the main class
Helloworld should be printed to standard out.

To run the plugin in imageJ when we click run, we need to
make a new folder containing ij.jar, and the imageJ folders
'images', 'macros', and 'plugins', copying myPlugin.jar to
the plugins folder and running ij.jar. This is done using a
build.xml.

Make a new folder (call it 'ImageJ') and put inside a copy of ij.jar.
From an imageJ installation copy the images, macros, and plugins
folders to your new ImageJ folder.

In your project folder locate the build.xml and open it in an editor
(Netbeans open file will do).

    <target name="-post-jar">
       <!-- copy QuimP11a.jar to ImageJ app folder -->
       <copy file="${dist.jar}" todir="../ImageJ/plugins/" />
    </target>

    <target name="run" depends="QuimP_11a-impl.jar">
      <!-- launch ImageJ with memory, and macro to run -->
         <java maxmemory="1699m" dir="../ImageJ" jar="../ImageJ/ij.jar" fork="yes">
            <arg line="-macro develMacro.txt" />
         </java>
    </target>


Switch off compile on run by 

To make the java api doc:
javadoc -d ../ij.api ij

in source folder











